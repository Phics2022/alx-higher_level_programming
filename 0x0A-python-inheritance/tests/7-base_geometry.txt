#importing the function
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

#test if value is an int
>>> obj = BaseGeometry()
>>> obj.integer_validator("feranmi", 17)

#test if value is not an int
>>> obj.integer_validator("feranmi", "oladipo")
Traceback (most recent call last):
 ...
TypeError: feranmi must be an integer

# test if value is < 0
>>> obj.integer_validator("feranmi", -1)
Traceback (most recent call last):
 ...
ValueError: feranmi must be greater than 0

# test if value is 0
>>> obj.integer_validator("feranmi", 0)
Traceback (most recent call last):
 ...
ValueError: feranmi must be greater than 0

# test if no parameter is giving
>>> a = BaseGeometry
>>> a.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

#try 1 param
>>> a.integer_validator("he")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>>
